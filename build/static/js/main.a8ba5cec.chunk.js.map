{"version":3,"sources":["images/Quizzer_Logo_02.png","images/Quizzer_Logo_01.png","components/homePage.js","components/stepperPanel.js","components/questionCard.js","components/scoreCard.js","themes/darkTheme.js","themes/lightTheme.js","App.js","utils/appConstants.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","margin","textAlign","padding","cardActions","display","bodyStyle","marginTop","HomePage","questionsCount","questionTime","startQuiz","classes","Card","className","CardContent","alt","src","require","Typography","variant","component","CardActions","Button","size","color","onClick","startIcon","theme","width","button","spacing","marginRight","actionsContainer","marginBottom","resetContainer","StepperPanel","totalSteps","activeStep","steps","Array","from","length","_","i","Stepper","map","label","Step","key","StepLabel","flexGrow","QuestionCard","questionObject","handleButtonClick","Grid","container","direction","justifyContent","alignItems","item","xs","align","question","options","answerOption","md","value","fullWidth","answer","emojiStyle","fontSize","ScoreCard","message","confetti","score","resetQuiz","window","innerWidth","height","innerHeight","Fragment","darkTheme","createTheme","palette","type","primary","blue","lightTheme","App","props","context","setTimer","timerId","setTimeout","setState","prevState","showResult","clearTimer","clearTimeout","handleAnswerOptionClick","isCorrect","state","currentQuestionIndex","questions","showHomePage","questionBank","sort","Math","random","slice","renderTime","remainingTime","timer","timerValue","handleThemeChange","darkThemeSelected","this","ThemeProvider","CssBaseline","AppBar","position","Toolbar","title","logo","IconButton","aria-label","timerWrapper","isPlaying","duration","colors","Component","withStyles","fontFamily","join","maxWidth","flexDirection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ba5cec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Quizzer_Logo_02.8b5b29d9.png\";","module.exports = __webpack_public_path__ + \"static/media/Quizzer_Logo_01.f78b305a.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmargin: '2rem 1rem',\r\n\t\ttextAlign: 'center',\r\n\t\tpadding: '0 0 1rem 0',\r\n\t},\r\n\tcardActions: {\r\n\t\tdisplay: 'inline-block',\r\n\t},\r\n\tbodyStyle: {\r\n\t\tmarginTop: '1rem',\r\n\t},\r\n});\r\n\r\nexport default function HomePage({ questionsCount, questionTime, startQuiz }) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<img\r\n\t\t\t\t\talt='Quizzer Logo'\r\n\t\t\t\t\tsrc={require('../images/Quizzer_Logo_02.png')}\r\n\t\t\t\t/>\r\n\t\t\t\t<Typography variant='h5' component='h2'>\r\n\t\t\t\t\tWelcome to Quizzer App\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body1' className={classes.bodyStyle}>\r\n\t\t\t\t\tThere are a total of {questionsCount} questions.\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tYou will get maximum of {questionTime} seconds to answer each\r\n\t\t\t\t\tquestion.\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions className={classes.cardActions}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tonClick={startQuiz}\r\n\t\t\t\t\tstartIcon={<PlayArrowIcon />}\r\n\t\t\t\t>\r\n\t\t\t\t\tStart Quiz\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n\tactionsContainer: {\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tresetContainer: {\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nexport default function StepperPanel({ totalSteps, activeStep }) {\r\n\tconst classes = useStyles();\r\n\tconst steps = Array.from({ length: totalSteps }, (_, i) => i + 1);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Stepper activeStep={activeStep}>\r\n\t\t\t\t{steps.map((label) => (\r\n\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t<StepLabel></StepLabel>\r\n\t\t\t\t\t</Step>\r\n\t\t\t\t))}\r\n\t\t\t</Stepper>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: '2rem 1rem',\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\nexport default function QuestionCard({ questionObject, handleButtonClick }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tdirection='row'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t\talignItems='baseline'\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Typography variant='h5' component='h2' align='center'>\r\n\t\t\t\t\t\t{questionObject.question}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{questionObject.options.map((answerOption) => (\r\n\t\t\t\t\t<Grid item xs={12} md={6} key={answerOption.value}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thandleButtonClick(answerOption.value === questionObject.answer)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{answerOption.label}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Confetti from 'react-confetti';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmargin: '2rem 1rem',\r\n\t\ttextAlign: 'center',\r\n\t\tpadding: '0 0 1rem 0',\r\n\t},\r\n\tcardActions: {\r\n\t\tdisplay: 'inline-block',\r\n\t},\r\n\temojiStyle: {\r\n\t\tfontSize: '13rem',\r\n\t},\r\n});\r\n\r\nexport default function ScoreCard({ score, questionsCount, resetQuiz }) {\r\n\tconst classes = useStyles();\r\n\tlet message;\r\n\tlet color;\r\n\tlet confetti;\r\n\tif (score === questionsCount) {\r\n\t\tmessage = 'Congratulations! You won.';\r\n\t\tcolor = 'primary';\r\n\t\tconfetti = (\r\n\t\t\t<Confetti width={window.innerWidth} height={window.innerHeight} />\r\n\t\t);\r\n\t} else {\r\n\t\tmessage = 'You lost. Better luck next time!';\r\n\t\tcolor = 'error';\r\n\t\tconfetti = <React.Fragment />;\r\n\t}\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{confetti}\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt='Quizzer Logo'\r\n\t\t\t\t\t\tsrc={require('../images/Quizzer_Logo_02.png')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography variant='h5' component='h2' color={color}>\r\n\t\t\t\t\t\t{message}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions className={classes.cardActions}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='medium'\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tonClick={resetQuiz}\r\n\t\t\t\t\t\tstartIcon={<ReplayIcon />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTry Again\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import { createTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst darkTheme = createTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: blue,\r\n\t},\r\n});\r\n\r\nexport default darkTheme;\r\n","import { createTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst lightTheme = createTheme({\r\n\tpalette: {\r\n\t\ttype: 'light',\r\n\t\tprimary: blue,\r\n\t},\r\n});\r\n\r\nexport default lightTheme;\r\n","import React, { Component } from 'react';\nimport { withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport HomePage from './components/homePage';\nimport StepperPanel from './components/stepperPanel';\nimport QuestionCard from './components/questionCard';\nimport ScoreCard from './components/scoreCard';\n\nimport questionBank from './data/QuestionBank.json';\nimport {\n\tTOTAL_QUESTIONS,\n\tDIFF_TIME_MILLISECONDS,\n\tQUESTION_TIME_MILLISECONDS,\n} from './utils/appConstants';\nimport darkTheme from './themes/darkTheme';\nimport lightTheme from './themes/lightTheme';\n\nconst styles = (theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tfontFamily: [\n\t\t\t'-apple-system',\n\t\t\t'BlinkMacSystemFont',\n\t\t\t'\"Segoe UI\"',\n\t\t\t'Roboto',\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t'Arial',\n\t\t\t'sans-serif',\n\t\t\t'\"Apple Color Emoji\"',\n\t\t\t'\"Segoe UI Emoji\"',\n\t\t\t'\"Segoe UI Symbol\"',\n\t\t].join(','),\n\t},\n\tlogo: {\n\t\tmaxWidth: '160px',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\ttextAlign: 'center',\n\t\tpadding: '0.5rem 0 0 3rem',\n\t},\n\ttimerWrapper: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tmarginTop: '1rem',\n\t},\n\ttimer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\ttimerValue: {\n\t\tfontSize: '40px',\n\t},\n});\n\nclass App extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tquestions: questionBank\n\t\t\t\t.sort(() => 0.5 - Math.random())\n\t\t\t\t.slice(0, TOTAL_QUESTIONS)\n\t\t\t\t.map((questionObject) => ({\n\t\t\t\t\t...questionObject,\n\t\t\t\t\toptions: questionObject.options.sort(() => 0.5 - Math.random()),\n\t\t\t\t})),\n\t\t\tcurrentQuestionIndex: 0,\n\t\t\tshowResult: false,\n\t\t\tscore: 0,\n\t\t\tshowHomePage: true,\n\t\t\tdarkThemeSelected: false,\n\t\t};\n\t\tthis.timerId = null;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.clearTimer();\n\t}\n\n\tsetTimer = () => {\n\t\tthis.timerId = setTimeout(() => {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tshowResult: true,\n\t\t\t}));\n\t\t}, QUESTION_TIME_MILLISECONDS);\n\t};\n\n\tclearTimer = () => {\n\t\tif (this.timerId) {\n\t\t\tclearTimeout(this.timerId);\n\t\t}\n\t};\n\n\thandleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tscore: prevState.score + 1,\n\t\t\t}));\n\t\t\tthis.clearTimer();\n\t\t\tthis.setTimer();\n\t\t} else {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tshowResult: true,\n\t\t\t}));\n\t\t\tthis.clearTimer();\n\t\t}\n\t\tconst { currentQuestionIndex, questions } = this.state;\n\t\tconst nextQuestion = currentQuestionIndex + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tcurrentQuestionIndex: prevState.currentQuestionIndex + 1,\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tshowResult: true,\n\t\t\t}));\n\t\t\tthis.clearTimer();\n\t\t}\n\t};\n\n\tstartQuiz = () => {\n\t\tthis.setTimer();\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tshowHomePage: false,\n\t\t}));\n\t};\n\n\tresetQuiz = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tquestions: questionBank\n\t\t\t\t.sort(() => 0.5 - Math.random())\n\t\t\t\t.slice(0, TOTAL_QUESTIONS),\n\t\t\tcurrentQuestionIndex: 0,\n\t\t\tshowResult: false,\n\t\t\tscore: 0,\n\t\t}));\n\t\tthis.setTimer();\n\t};\n\n\trenderTime = ({ remainingTime }) => {\n\t\tconst { classes } = this.props;\n\t\tif (remainingTime === 0) {\n\t\t\treturn <div className={classes.timer}>Too late...</div>;\n\t\t} else if (remainingTime < 4) {\n\t\t\treturn (\n\t\t\t\t<div className={classes.timer}>\n\t\t\t\t\t<div>Hurry up</div>\n\t\t\t\t\t<div className={classes.timerValue}>{remainingTime}</div>\n\t\t\t\t\t<div>seconds</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={classes.timer}>\n\t\t\t\t\t<div>Remaining</div>\n\t\t\t\t\t<div className={classes.timerValue}>{remainingTime}</div>\n\t\t\t\t\t<div>seconds</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\thandleThemeChange = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tdarkThemeSelected: !prevState.darkThemeSelected,\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tscore,\n\t\t\tquestions,\n\t\t\tshowResult,\n\t\t\tcurrentQuestionIndex,\n\t\t\tshowHomePage,\n\t\t\tdarkThemeSelected,\n\t\t} = this.state;\n\t\tconst { classes } = this.props;\n\t\tconst questionTimeDuration =\n\t\t\t(QUESTION_TIME_MILLISECONDS - DIFF_TIME_MILLISECONDS) / 1000;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ThemeProvider\n\t\t\t\t\ttheme={darkThemeSelected ? { ...darkTheme } : { ...lightTheme }}\n\t\t\t\t>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t\t<AppBar position='static' color='transparent'>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Typography variant='h4' className={classes.title}>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\talt='Quizzer Logo'\n\t\t\t\t\t\t\t\t\t\tsrc={require('./images/Quizzer_Logo_01.png')}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={this.handleThemeChange}\n\t\t\t\t\t\t\t\t\taria-label='toggle light / dark theme'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{darkThemeSelected ? (\n\t\t\t\t\t\t\t\t\t\t<Brightness7Icon />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Brightness4Icon />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</AppBar>\n\t\t\t\t\t\t{showHomePage ? (\n\t\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\t\tquestionsCount={TOTAL_QUESTIONS}\n\t\t\t\t\t\t\t\tquestionTime={questionTimeDuration}\n\t\t\t\t\t\t\t\tstartQuiz={this.startQuiz}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : showResult ? (\n\t\t\t\t\t\t\t<ScoreCard\n\t\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\t\tquestionsCount={questions.length}\n\t\t\t\t\t\t\t\tresetQuiz={this.resetQuiz}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<StepperPanel\n\t\t\t\t\t\t\t\t\ttotalSteps={TOTAL_QUESTIONS}\n\t\t\t\t\t\t\t\t\tactiveStep={currentQuestionIndex}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className={classes.timerWrapper}>\n\t\t\t\t\t\t\t\t\t<CountdownCircleTimer\n\t\t\t\t\t\t\t\t\t\tkey={currentQuestionIndex}\n\t\t\t\t\t\t\t\t\t\tisPlaying\n\t\t\t\t\t\t\t\t\t\tduration={questionTimeDuration}\n\t\t\t\t\t\t\t\t\t\tcolors={[['#007777', 0.33], ['#F7B801', 0.33], ['#A30000']]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{this.renderTime}\n\t\t\t\t\t\t\t\t\t</CountdownCircleTimer>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<QuestionCard\n\t\t\t\t\t\t\t\t\tquestionObject={questions[currentQuestionIndex]}\n\t\t\t\t\t\t\t\t\thandleButtonClick={this.handleAnswerOptionClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n","export const TOTAL_QUESTIONS = 10;\r\nexport const DIFF_TIME_MILLISECONDS = 250;\r\nexport const QUESTION_TIME_MILLISECONDS = 10000 + DIFF_TIME_MILLISECONDS;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}